{
  "compilerOptions": {
    // Assume all ESNext features are available at runtime.
    "lib": ["ESNext", "DOM", "DOM.Iterable"],
    // Do as little "transformation" as possible.
    "target": "ESNext",
    // Include experimental React types.
    "types": ["react/experimental", "vite/client"],
    // Leave "import" statements alone since we are using ESM.
    "module": "ESNext",
    // Assume all files are ESM modules.
    "moduleDetection": "force",
    // Allow importing CJS modules written as ESM modules without the
    // "double default" problem. https://github.com/microsoft/TypeScript/issues/50058#issuecomment-1404411380
    // This assumes TSC never emits JS code that is run "raw" by Node, which is
    // true for our project: our code is only ever run through Vite or Rollup.
    // Further reading here: https://stackoverflow.com/a/71473145/66673
    "moduleResolution": "Bundler",
    // Enable strictest settings like strictNullChecks & noImplicitAny.
    "strict": true,
    // Speed up compilation by assuming .d.ts files are valid.
    "skipLibCheck": true,
    // Import non-ES modules as default imports.
    "esModuleInterop": true,
    // Allow importing JSON files.
    "resolveJsonModule": true,
    // Allow importing non-TS files as "any".
    "noImplicitAny": false,
    // Allow JSX syntax.
    "jsx": "react-jsx",
    // Don't emit during normal type-checking, only during build script.
    "noEmit": true,
    // Remove comments from output.
    "removeComments": true,
    // Dramatically speed up successive compilations.
    "incremental": true
  },
  "include": ["*.ts"]
}
